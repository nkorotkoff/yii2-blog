<?php


namespace frontend\controllers;


use common\models\Category;
use common\models\Comments;
use common\models\Hashtags;
use common\models\Posts;
use Yii;
use yii\data\Pagination;
use yii\web\Controller;

class MainPageController extends Controller
{

    public function actions()
    {
        $categories = Category::find()->all();
        $posts = Posts::find()->orderBy(['views'=>SORT_DESC])->limit(3)->all();
        $this->view->params['posts'] = $posts;
        $this->view->params['categories'] =$categories;
        return parent::actions(); // TODO: Change the autogenerated stub
    }

    public function actionIndex(){

        $query = Posts::find()->orderBy(['id'=>SORT_DESC]);
        $pages = new Pagination(['totalCount'=>$query->count(),'pageSize'=>3]);
//        var_dump($pages);
        $models = $query->offset($pages->offset)->limit($pages->limit)->all();
        return $this->render('index',['posts'=>$models,'pages'=>$pages]);
    }
    public function actionPost($id){
        $post = Posts::findOne($id);
        $post->incrementPost();
        return $this->render('blogDetails',['post'=>$post]);
    }

    public function actionComment($id){
        $model = new Comments();
        $post = $this->request->post('comment');
        $model->name = $post['name'];
        $model->text = $post['text'];
        if($model->addComment($id)){
            return $this->redirect(['main-page/post','id'=>$id]);
        }
    }
    public function actionLike($id){

           $model = Posts::findOne($id);


            $session = Yii::$app->session;
            $session->open();
            $check = true;
            var_dump($id);

            if($session->get($model->title)){
                $session->remove($model->title);
                $model->likes = $model->likes-1;
                $check = false;
            }else{
                $session->set($model->title,'true');
                $session->close();
                $model->likes = $model->likes+1;
            }
        $model->save();
    }
    public function actionShowCategory($id){
        $categories = Category::findOne($id);
        return $this->render('index',['posts'=>$categories->posts,'category'=>$categories]);
    }
    public function actionHashtags($id){
        $hashtag = Hashtags::findOne($id);
        return $this->render('index',['posts'=>$hashtag->posts,'hashtag'=>$hashtag]);
    }

}